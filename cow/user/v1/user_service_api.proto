syntax = "proto3";

package cow.user.v1;

option go_package = "github.com/cownetwork/user/v1;user";
option java_package = "network.cow.mooapis.user.v1";
option java_multiple_files = true;

message GetPlayerByIdRequest {
    string player_id = 1;
}

message GetPlayerRequest {
    PlayerIdentifier identifier = 1;
}

message GetPlayerResponse {
    Player player = 1;
}

message GetPlayersByIdRequest {
    repeated string player_ids = 1;
}

message GetPlayersRequest {
    repeated PlayerIdentifier identifiers = 1;
}

message GetPlayersResponse {
    repeated Player players = 1;
}

message UpdatePlayerMetadataRequest {
    string player_id = 1;
    Metadata metadata = 2;
}

message GetUserRequest {
    string user_id = 1;
}

message GetUserResponse {
    User user = 1;
}

message GetUserPlayersRequest {
    string user_id = 1;
}

message GetUserPlayersResponse {
    repeated Player players = 1;
}

// Service definition
service UserService {
    // Returns the player or creates/updates it.
    rpc GetPlayer(GetPlayerRequest) returns (GetPlayerResponse);

    // Returns the player or creates/updates it.
    rpc GetPlayerById(GetPlayerByIdRequest) returns (GetPlayerResponse);

    // Returns the players or creates/updates them.
    rpc GetPlayers(GetPlayersRequest) returns (GetPlayersResponse);

    // Returns the players or creates/updates them.
    rpc GetPlayersById(GetPlayersByIdRequest) returns (GetPlayersResponse);

    // Returns the user by id.
    rpc GetUser(GetUserRequest) returns (GetUserResponse);

    // Returns the players assigned to this user.
    rpc GetUserPlayers(GetUserPlayersRequest) returns (GetUserPlayersResponse);

    // Returns the players assigned to this user.
    rpc UpdatePlayerMetadata(UpdatePlayerMetadataRequest) returns (GetPlayerResponse);
}

message User {
    // The unique identifier of the user.
    string id = 1;

    // The metadata assigned to the user.
    Metadata metadata = 2;
}

message Player {
    string id = 1; // random uuid
    string reference_id = 2; // e.g. minecraft uuid
    string reference_type = 3; // e.g. "minecraft"
    string username = 4; // e.g. minecraft username

    // The underlying user.
    User user = 5;

    // The metadata assigned to the player.
    Metadata metadata = 6;
}

// The identifier used to determine which player to return.
message PlayerIdentifier {
    // The reference id of the corresponding source (e.g. the minecraft uuid).
    string id = 1;
    // The type of the reference/source id (e.g. "minecraft")
    string type = 2;
}

message Metadata {
    // The locale this player uses.
    string locale = 1;
}
