syntax = "proto3";

package cow.indigo.v1;

option go_package = "github.com/cownetwork/indigo/v1;indigo";
option java_package = "network.cow.mooapis.indigo.v1";
option java_multiple_files = true;

// Service definition
service IndigoService {
    rpc ListRoles (ListRolesRequest) returns (ListRolesResponse) {
    }

    rpc GetRole (GetRoleRequest) returns (GetRoleResponse) {
    }

    rpc InsertRole (InsertRoleRequest) returns (InsertRoleResponse) {
    }

    rpc UpdateRole (UpdateRoleRequest) returns (UpdateRoleResponse) {
    }

    rpc DeleteRole (DeleteRoleRequest) returns (DeleteRoleResponse) {
    }

    rpc AddRolePermission (AddRolePermissionRequest) returns (AddRolePermissionResponse) {
    }

    rpc RemoveRolePermission (RemoveRolePermissionRequest) returns (RemoveRolePermissionResponse) {
    }

    rpc GetUserRoles (GetUserRolesRequest) returns (GetUserRolesResponse) {
    }

    rpc AddUserRole (AddUserRoleRequest) returns (AddUserRoleResponse) {
    }

    rpc RemoveUserRole (RemoveUserRoleRequest) returns (RemoveUserRoleResponse) {
    }

    rpc AddUserPermission (AddUserPermissionRequest) returns (AddUserPermissionResponse) {
    }

    rpc RemoveUserPermission (RemoveUserPermissionRequest) returns (RemoveUserPermissionResponse) {
    }

    rpc HasUserPermission (HasUserPermissionRequest) returns (HasUserPermissionResponse) {
    }
}

// ===================
// actions with roles
// ===================

message ListRolesRequest {
}

message ListRolesResponse {
    repeated Role roles = 1;
}

message GetRoleRequest {
    string role_id = 1;
}

message GetRoleResponse {
    Role role = 1;
}

message InsertRoleRequest {
    Role role = 1;
}

message InsertRoleResponse {
    Role inserted_role = 1;
}

message UpdateRoleRequest {
    string role_id = 1;
    Role role_data = 2;
}

message UpdateRoleResponse {
    Role updated_role = 1;
}

message DeleteRoleRequest {
    string role_id = 1;
}

message DeleteRoleResponse {
}

message AddRolePermissionRequest {
    string role_id = 1;
    repeated string permissions = 2;
}

message AddRolePermissionResponse {
    repeated string added_permissions = 1;
}

message RemoveRolePermissionRequest {
    string role_id = 1;
    repeated string permissions = 2;
}

message RemoveRolePermissionResponse {
    repeated string removed_permissions = 1;
}

// ===================
// actions with users
// ===================

message GetUserRolesRequest {
    string user_account_id = 1;
}

message GetUserRolesResponse {
    repeated Role roles = 2;
}

message AddUserRoleRequest {
    string user_account_id = 1;
    repeated string role_ids = 2;
}

message AddUserRoleResponse {
    repeated string added_role_ids = 1;
}

message RemoveUserRoleRequest {
    string user_account_id = 1;
    repeated string role_ids = 2;
}

message RemoveUserRoleResponse {
    repeated string removed_role_ids = 1;
}

message AddUserPermissionRequest {
    string user_account_id = 1;
    repeated string permissions = 2;
}

message AddUserPermissionResponse {
    repeated string added_permissions = 1;
}

message RemoveUserPermissionRequest {
    string user_account_id = 1;
    repeated string permissions = 2;
}

message RemoveUserPermissionResponse {
    repeated string removed_permissions = 1;
}

message HasUserPermissionRequest {
    string user_account_id = 1;
    repeated string permissions = 2;
}

message HasUserPermissionResponse {
    bool result = 1;
}

message Role {
    // The id of the role, e.g. `minecraft_player`
    string id = 1;

    // Priority of the role is used when multiple roles
    // get assigned to a user and we have to determine which
    // properties get inherited or overwritten by which roles.
    int32 priority = 2;

    // Transient means that the role is simply used for inheritance purposes
    // and will not overwrite any permissions from any role.
    // The exception is when checking with two transient roles, than the priority
    // will be used to determine which overwrites which.
    bool transient = 3;

    // A hex color string (e.g. `4a2f30`) to set the general display color
    // for this role across all systems (Minecraft network, webpages, ...).
    string color = 4;

    // A list of permissions that are directly binded to this role.
    // A permission is a dot seperated string which only contains [a-Z0-9\*].
    repeated string permissions = 5;
}